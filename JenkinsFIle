pipeline { 
    environment { 
        DOCKER_USERNAME = 'moaazzaki'
        DOCKER_PASS = 'meZooZem1999'
        GIT_USERNAME= 'MoaazZaki'
        GIT_PASS = 'meZooZem99'
        GIT_REPO = 'DanielEskandar/FlickrCloneBE.git'
    }
    agent any 
    stages { 
        stage('Cloning Backend') { 
            environment {
                NODE_ENV='development'
                PORT='3001'
                DATABASE='mongodb+srv://MainUser:<PASSWORD>@cluster0.pms75.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'
                DATABASE_PASSWORD='c0t4A7ImohkWg84V'
                JWT_SECRET='flickr-clone-backend-jsonwebtoken-secret'
                JWT_EXPIRES_IN='90d'
                EMAIL_PASSWORD = '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'
                EMAIL_SENDER = 'flickr-clone@outlook.com'
                CLOUDINARY_NAME = 'dpuxq7nuq'
                CLOUDINARY_API_KEY = '148961396718921'
                CLOUDINARY_API_SECRET = '1O6rENShVIPApuJphfXGPtCh02o'
                CLOUDINARY_URL='cloudinary://148961396718921:1O6rENShVIPApuJphfXGPtCh02o@dpuxq7nuq'
            }
            steps { 
                sh 'echo --------------------------------------BACKEND-----------------------------------------------'
                sh 'mkdir -p FlickrCloneBE'
                sh 'cd FlickrCloneBE'
                dir("FlickrCloneBE") {
                    git branch: 'main', credentialsId: '231d72e7-0212-4f0f-932e-e83b5ac2db7c', url: 'https://github.com/DanielEskandar/FlickrCloneBE.git'
                    sh 'echo "$(printenv)" > "config.env"'
                    sh 'ls -a'
                }
            }
        } 
        stage('Cloning frontend') { 
            environment {
                PORT='5000'
                REACT_APP_BACKEND_BASE_URL= 'api/'
            }
                 
            steps { 
                
                sh 'echo --------------------------------------FRONTEND-----------------------------------------------'
                sh 'mkdir -p Flickr-Frontend'
                dir("Flickr-Frontend") {
                    git branch: 'main', credentialsId: '231d72e7-0212-4f0f-932e-e83b5ac2db7c', url: 'https://github.com/amamdouhmahfouz/Flickr-Frontend.git'
                    sh 'echo "$(printenv)" > ".env"'
                    sh 'ls -a'
                    dir("src") {
                         sh 'ls -a'
                         sh 'cat fakeAPI.js'
                    }
                    
                }
            }
        }
        stage('Cloning DevOps') { 
            steps { 
                sh 'echo --------------------------------------DEVOPS-----------------------------------------------'
                git branch: 'main', credentialsId: '231d72e7-0212-4f0f-932e-e83b5ac2db7c', url: 'https://github.com/MoaazZaki/FlickrCloneDevOps.git'
                sh 'mv ./server/Dockerfile ./FlickrCloneBE'
                sh 'mv ./client/Dockerfile ./Flickr-Frontend'
            }
        }
        stage('Logging to dockerhub account') { 
            steps { 
                script { 
                    sh 'echo --------------------------------------LOGGING TO DOCKER-----------------------------------------------'
                    sh 'docker login -u ' + DOCKER_USERNAME + ' -p ' + DOCKER_PASS
                }
            } 
        }
        stage('Building our image') { 
            steps { 
                script { 
                    sh 'docker-compose build'
                }
            } 
        }
        stage('Deploy our image') { 
            steps { 
                script { 
                    sh 'echo --------------------------------------PUSHING DOCKER IMAGE-----------------------------------------------'
                    sh 'docker push moaazzaki/flickr-client:latest'
                } 
            }
        } 
        stage('Cleaning') { 
            steps { 
                sh 'echo --------------------------------------CLEANING-----------------------------------------------'
                sh 'rm -rf *'
            }
        }
    }
}

